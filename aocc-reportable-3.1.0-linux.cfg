#---------------------------------------------------------------------------------------
# SPEC CPU(R) 2017 config file for: AMD Optimizing C/C++ Compiler (AOCC) on Linux x86_64
#---------------------------------------------------------------------------------------

%ifndef %{aocc_version}       # EDIT to select the version of AOCC to use.  Or,
% define aocc_version 3.1.0   #      you can set it on the command line using:
%endif                        #      'runcpu --define aocc_version=x.y.z'


#--------- Preprocessor -------------------------------------------------------
%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 6      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#     Two suggestions: # (1) EDIT this label as you try new ideas.
%define label "aocc-3" # (2)      Use a label meaningful to *you*.


# Don't change this part.
%define model  -m64


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

command_add_redirect = 1
flagsurl             = $[top]/config/flags/aocc.xml
iterations           = 1
label                = %{label}-%{aocc_version}%{model}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus}
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
reportable           = 0
tune                 = base
output_root          = /home/student/pal0009/CPE-631-Term-Project
monitor_wrapper      = rm -rf /home/student/pal0009/CPE-631-Term-Project/${benchmark} ; mkdir /home/student/pal0009/CPE-631-Term-Project/${benchmark} ; AMDuProfPcm -r -i /home/student/pal0009/CPE-631-Term-Project/spec-config.conf -a -C -D /home/student/pal0009/CPE-631-Term-Project/${benchmark}/events.csv -o /home/student/pal0009/CPE-631-Term-Project/${benchmark}/metrics.csv -- $command


#------- Compilers ------------------------------------------------------------
default:
#  EDIT: The parent directory for your compiler.
#        Do not include the trailing /bin/
#        Do not include a trailing slash
#  Examples:
#   1  On an Ubuntu system, you said
#      'dpkg -i aocc-compiler-2.0.0_1_amd64.deb'
#      Use:                 %   define aocc_dir "/opt/AMD/aocc-compiler-%{aocc_version}"
#   2  You unpacked AOCC-1.3.0-Compiler.tar into /data1/aocc/AOCC-1.3.0-Compiler/
#      Use:                 %   define aocc_dir "/data1/aocc/AOCC-1.3.0-Compiler"
#
%ifndef %{aocc_dir}
%   define  aocc_dir        "/opt/aocc-compiler-3.1.0" # EDIT (see above)
%endif

# EDIT if needed: the preENV line adds library directories to the runtime
#      path.  You can adjust it, or add lines for other environment variables.
#      See: https://www.spec.org/cpu2017/Docs/config.html#preenv
   preENV_LIBRARY_PATH      =%{aocc_dir}/lib:%{aocc_dir}/lib32:%{ENV_LIBRARY_PATH}
   preENV_LD_LIBRARY_PATH   =%{aocc_dir}/lib:%{aocc_dir}/lib32:%{ENV_LD_LIBRARY_PATH}
   preENV_C_INCLUDE_PATH    =:%{aocc_dir}/include
   preENV_CPLUS_INCLUDE_PATH=:%{aocc_dir}/include
   SPECLANG                = %{aocc_dir}/bin/
   CC                      = $(SPECLANG)clang     -std=c99   %{model}
   CXX                     = $(SPECLANG)clang++   -std=c++03 %{model}
   FC                      = $(SPECLANG)flang                %{model}
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = --version
   CXX_VERSION_OPTION      = --version
   FC_VERSION_OPTION       = --version

   EXTRA_FLIBS = -lflang           # Fortran run-time library
   EXTRA_CXXLIBS = -lflang         # ...and for mixed-language benchmarks with C++ and Fortran

default:
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = Not Applicable


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
    EXTRA_PORTABILITY = -DSPEC_LP64

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:        # lang='C'
   PORTABILITY    = -DSPEC_LINUX_X64

521.wrf_r,621.wrf_s:                    # lang='F,C'
   CPORTABILITY   = -DSPEC_CASE_FLAG
   FPORTABILITY   = -Mbyteswapio

523.xalancbmk_r,623.xalancbmk_s:        # lang='CXX'
   PORTABILITY    = -DSPEC_LINUX

526.blender_r:                          # lang='CXX,C'
   PORTABILITY    = -funsigned-char -DSPEC_LINUX
   CXXPORTABILITY = -D__BOOL_DEFINED

527.cam4_r,627.cam4_s:                  # lang='F,C'
   PORTABILITY    = -DSPEC_CASE_FLAG

628.pop2_s:                             # lang='F,C'
   CPORTABILITY   = -DSPEC_CASE_FLAG
   FPORTABILITY   = -Mbyteswapio


#-------- Tuning Flags common to Base and Peak --------------------------------

#
# Speed (OpenMP and Autopar allowed)
#

intspeed,fpspeed:
    EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
    threads = 48
fpspeed:
    #
    # 627.cam4 needs a big stack; the preENV will apply it to all
    # benchmarks in the set, as required by the rules.
    #
    # It also wants a very large normal stack; it will be necessary
    # to say
    #
    #   ulimit -s unlimited
    #
    # in the shell before starting runcpu.
    #
    preENV_OMP_STACKSIZE = 196M


#--------  Baseline Tuning Flags ----------------------------------------------
#
# EDIT if needed -- See comments in "default=peak:" section below.
#
default=base:       # flags for all base
   COPTIMIZE      = -g -O3 -ffast-math -march=native -flto
   CXXOPTIMIZE    = -g -O3 -ffast-math -march=native -flto
   FOPTIMIZE      = -g -O3             -march=native -flto -Kieee -fno-finite-math-only

intrate,intspeed=base: # flags for integer base
   EXTRA_COPTIMIZE = -fgnu89-inline -z muldefs
# Notes about the above
#  - 502.gcc_r/602.gcc_s             needs -fgnu89-inline or -z muldefs
#  - For 'base', all benchmarks in a set must use the same options.
#  - Therefore, all base benchmarks get the above.  See:
#       www.spec.org/cpu2017/Docs/runrules.html#BaseFlags
#       www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html


#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:
   #
   # For 'base', this config file (conservatively) does not include some
   # optimizations.
   # You might want to try adding some, by creating a 'peak' section here,
   # with individualized benchmark options:
   #
   #        500.perlbench_r=peak:
   #           OPTIMIZE = this
   #        502.gcc_r=peak:
   #           OPTIMIZE = that
   #        503.bwaves_r=peak:
   #           OPTIMIZE = other   .....(and so forth)
   #
   # If you try it:
   #   - You must remove the 'basepeak' option, above.
   #   - You will need time and patience, to diagnose and avoid any errors.
   #   - Some floating point benchmarks may get wrong answers, depending on:
   #         the particular chip
   #         the version of the compiler
   #         other optimizations enabled
   #   - See: http://www.spec.org/cpu2017/Docs/config.html
   #   - and: http://www.spec.org/cpu2017/Docs/runrules.html


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++/Fortran: Version %{aocc_version} of AOCC, the
   sw_compiler002   = AMD Optimizing C/C++ Compiler

#--------- EDIT Your info ---------------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = LaCASA Laboratory
   tester             = Ranjan Hebbar & Aleksandar Milenkovic
   test_sponsor       = LaCASA Laboratory
   license_num        = 1269
   prepared_by        = My Corporation                        

#--------- EDIT system availability dates and system information ----------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                                   # Brief info about field
   hw_avail           = February-2021                               # Date of LAST hardware component to ship
   sw_avail           = February-2021                               # Date of LAST software component to ship
   hw_cpu_nominal_mhz = 2800                                        # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = 3350                                        # Max chip frequency, in MHz
   hw_ncores          = 48                                           # number cores enabled
   hw_nthreadspercore = 1                                           # number threads enabled per core
   hw_ncpuorder       = 0-47 chips                                  # Ordering options

   hw_model           = AMD EPYC 7402 24-Core Processor		    # system model name

   hw_pcache          = 64K				            # Primary cache size, type, location
   hw_scache          = 512K			                    # Second cache or "None"
   hw_tcache          = 128M      		                    # Third  cache or "None"

   hw_memory001       = 256 GB
   hw_memory002       = running at 3200 MHz                         # PCn-nnnnnR-n[, ECC and other info])


#--------- Sysinfo fields - You may need to adjust this section ---------------
# values by sysinfo
#       www.spec.org/cpu2017/Docs/config.html#sysinfo

intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example               # Brief info about field
hw_cpu_name          = AMD EPYC 7402               		    # chip name
hw_disk              = 2TB				            # Size, type, other perf-relevant info
hw_nchips            = 2                                            # number chips enabled

sw_os001             = Linux                                        # Operating system
sw_os002             = Red Hat Enterprise Linux 8.4                           # and version

